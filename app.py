import logging
import os
import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if not TELEGRAM_TOKEN:
    raise ValueError("Telegram token not found. Set the TELEGRAM_TOKEN environment variable.")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info(f"User {update.effective_user.username} used /start")
    await update.message.reply_text(
        "Welcome to Health Assistant Bot! üéâ\n\n"
        "Commands available:\n"
        "/dashboard <user_id> - View your health stats.\n"
        "Example: /dashboard 1"
    )

# –ö–æ–º–∞–Ω–¥–∞ /dashboard
async def dashboard(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        args = context.args
        if len(args) != 1 or not args[0].isdigit():
            await update.message.reply_text("‚ö†Ô∏è Please provide a valid user_id (a number).\nExample: /dashboard 1")
            return

        user_id = args[0]
        dashboard_url = f"https://health-assistant-final.onrender.com/dashboard?user_id={user_id}"
        
        # –ó–∞–ø—Ä–æ—Å –∫ API
        logger.info(f"Fetching dashboard for user_id {user_id}")
        response = requests.get(dashboard_url)

        if response.status_code == 200:
            await update.message.reply_text(
                f"‚úÖ Your dashboard is ready!\n\nClick the link below:\n{dashboard_url}"
            )
        elif response.status_code == 204:
            await update.message.reply_text("‚ö†Ô∏è No data available for this user_id.")
        else:
            await update.message.reply_text(
                "‚ùå Something went wrong while retrieving your dashboard. Please try again later."
            )
            logger.error(f"Error {response.status_code}: {response.text}")

    except Exception as e:
        logger.error(f"Error in /dashboard command: {e}")
        await update.message.reply_text("‚ùå An unexpected error occurred. Please try again later.")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    logger.info("Starting Health Assistant Bot...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram Bot
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("dashboard", dashboard))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("Bot is running and polling for updates.")
    app.run_polling()

if __name__ == "__main__":
    main()
